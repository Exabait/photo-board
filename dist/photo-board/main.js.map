{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/tools/tools.component.ts","./src/app/components/tools/tools.component.html","./src/app/components/overview-dialog/overview-dialog.component.ts","./src/app/components/overview-dialog/overview-dialog.component.html","./src/app/app.module.ts","./src/app/services/tag.service.ts","./src/app/services/boards.service.ts","./src/app/components/board/board.component.ts","./src/app/components/board/board.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  boardsApiUrl: 'http://mean-photo-board-back.eu-4.evennode.com',\n  immagaApiUrl: 'https://api.imagga.com/v2/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { BoardsService } from './services/boards.service';\n\nimport { BoardModel } from './models/board.model';\nimport { Subject } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  title = 'photo-board';\n\n  public boardsList: BoardModel[] = [];\n  public board: BoardModel;\n  public isImageAdding: boolean;\n  public isTagShowed: boolean;\n\n  public isBoardSaved: boolean;\n\n  destroy$: Subject<any> = new Subject();\n\n  constructor(private boardsService: BoardsService, public dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n   this.getBoards();\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  changeBoard(board: BoardModel): void {\n    this.board = board;\n    this.isTagShowed = false;\n  }\n\n  saveBoard(): void {\n    this.boardsService.updateBoard(this.board)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => {\n      this.isBoardSaved = true;\n      setTimeout(() => this.isBoardSaved = false, 3000);\n    });\n  }\n\n  dismissChanges(): void {\n    this.getBoards();\n  }\n\n  createCatalog(boardList: BoardModel[]): void {\n    this.boardsList = boardList;\n  }\n\n  private getBoards(): void {\n    this.boardsService.getAllBoards()\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(boards => {\n      this.boardsList = boards;\n      this.board = this.boardsList[0];\n    });\n  }\n}\n","<div class=\"wrapper\">\n  <div class=\"header\">\n    Photo Board\n    <hr>\n  </div>\n  <app-tools [board]=\"board\" [boardsList]=\"boardsList\"\n             (boardChanges)=\"changeBoard($event)\" (boardsListChanges)=\"createCatalog($event)\"\n             [isTagShowed]=\"isTagShowed\" (isTagShowedChanges)=\"isTagShowed = $event\"\n             (isImageAdding)=\"isImageAdding = $event\">\n  </app-tools>\n  <app-board [board]=\"board\" [isImageAdding]=\"isImageAdding\" [isTagShowed]=\"isTagShowed\"></app-board>\n  <div class=\"bottom\">\n    <div>\n      <button class=\"transparent-button\" (click)=\"dismissChanges()\">Dismiss Changes</button>\n    </div>\n    <div>\n      <button class=\"main-button\" (click)=\"saveBoard()\">Save Board</button>\n      <ng-container *ngIf=\"isBoardSaved\">\n        <p>Board's saved</p>\n      </ng-container>\n    </div>\n  </div>\n</div>\n","import { Component, EventEmitter, Input, OnDestroy, OnInit, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { takeUntil } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\nimport { BoardModel } from '../../models/board.model';\nimport { TagService } from '../../services/tag.service';\nimport { OverviewDialogComponent } from '../overview-dialog/overview-dialog.component';\n\n@Component({\n  selector: 'app-tools',\n  templateUrl: './tools.component.html',\n  styleUrls: ['./tools.component.scss']\n})\nexport class ToolsComponent implements OnInit, OnDestroy {\n\n  @Input() boardsList: BoardModel[];\n  @Output() boardsListChanges: EventEmitter<BoardModel[]> = new EventEmitter<BoardModel[]>();\n\n  @Input() board: BoardModel;\n  @Output() boardChanges: EventEmitter<BoardModel> = new EventEmitter<BoardModel>();\n\n  @Input() isTagShowed: boolean;\n  @Output() isTagShowedChanges: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  @Output() isImageAdding: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  public imageInput = new FormControl('');\n  public boardOptions = new FormControl('');\n\n  destroy$: Subject<any> = new Subject();\n\n  constructor(private tagService: TagService, public dialog: MatDialog) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  showTags(): void {\n    this.isTagShowedChanges.emit(!this.isTagShowed);\n  }\n\n  changeBoard(): void {\n    this.board = this.boardsList.find(board => board.title === this.boardOptions.value);\n    this.boardChanges.emit(this.board);\n  }\n\n  addImage(): void {\n    this.isImageAdding.emit(true);\n    this.tagService.getImageTags(this.imageInput.value)\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(res => {\n          this.board.photos.push({\n            link: this.imageInput.value,\n            tags: res.result.tags.slice(0, 10),\n            dateCreated: Date.now()\n          });\n          this.imageInput.setValue('');\n          this.isImageAdding.emit(false);\n        },\n        () => this.isImageAdding.emit(false));\n  }\n\n  createCatalog(): void {\n    const dialogRef = this.dialog.open(OverviewDialogComponent, {\n      width: '250px',\n      data: {title: !!this.board ?  this.board.title : 'New Catalog Title'}\n    });\n\n    dialogRef.afterClosed().pipe(\n      takeUntil(this.destroy$),\n    )\n      .subscribe((title: string) => {\n        if (!this.checkIsNewBoard(title)) {\n          this.addNewBoard(title);\n        } else {\n          const existedBoard = this.boardsList.find(board => board.title === title);\n          this.boardChanges.emit(existedBoard);\n        }\n        this.isTagShowedChanges.emit(false);\n      });\n  }\n\n  private checkIsNewBoard(title: string): boolean {\n    return this.boardsList.length !== 0 ? !!this.boardsList.find(board => board.title === title) : false;\n  }\n\n  private addNewBoard(title: string): void {\n    this.board = {\n      title,\n      photos: []\n    };\n    this.boardsList.push(this.board);\n    this.boardsListChanges.emit(this.boardsList);\n    this.boardChanges.emit(this.board);\n  }\n\n}\n","<div class=\"image-input\">\n  <p class=\"input-label\">&nbsp;Add image to the board</p>\n  <input [formControl]=\"imageInput\">\n  <button class=\"main-button\" (click)=\"addImage()\">Add</button>\n</div>\n<div>\n  <p class=\"input-label\"></p>\n  <button class=\"transparent-button\" (click)=\"showTags()\">Run tagging API</button>\n</div>\n<div>\n  <p class=\"input-label\">Select an existing board</p>\n  <select [formControl]=\"boardOptions\" (change)=\"changeBoard()\">\n    <option *ngFor=\"let boardOption of boardsList\" [selected]=\"board === boardOption\">\n      {{boardOption.title}}\n    </option>\n  </select>\n</div>\n<div>\n  <p class=\"input-label\"></p>\n  <button class=\"transparent-button\" mat-raised-button (click)=\"createCatalog()\">Create a new catalog</button>\n</div>\n\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nexport interface DialogData {\n  title: string;\n}\n\n@Component({\n  selector: 'app-overview-dialog',\n  templateUrl: './overview-dialog.component.html',\n  styleUrls: ['./overview-dialog.component.scss']\n})\nexport class OverviewDialogComponent implements OnInit {\n\n  constructor(public dialogRef: MatDialogRef<OverviewDialogComponent>, @Inject(MAT_DIALOG_DATA) public data: DialogData) {}\n\n  ngOnInit(): void {\n  }\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<mat-dialog-content>\n  <div mat-dialog-content>\n    <p>Board Title</p>\n    <mat-form-field>\n      <input matInput [(ngModel)]=\"data.title\">\n    </mat-form-field>\n  </div>\n  <div mat-dialog-actions>\n    <button mat-button (click)=\"onNoClick()\">Cancel</button>\n    <button mat-button [mat-dialog-close]=\"data.title\" cdkFocusInitial>Ok</button>\n  </div>\n</mat-dialog-content>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { BoardsService } from './services/boards.service';\nimport { TagService } from './services/tag.service';\n\nimport { AppComponent } from './app.component';\nimport { OverviewDialogComponent } from './components/overview-dialog/overview-dialog.component';\nimport { BoardComponent } from './components/board/board.component';\nimport { ToolsComponent } from './components/tools/tools.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OverviewDialogComponent,\n    BoardComponent,\n    ToolsComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatProgressSpinnerModule,\n    FormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [BoardsService, TagService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TagService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getImageTags(imageUrl: string): Observable<any> {\n    const encodedImageUrl = encodeURIComponent(imageUrl);\n\n    return this.httpClient.get(`${environment.immagaApiUrl}tags?image_url=${encodedImageUrl}`, {\n      headers: {\n        Authorization: `Basic YWNjX2VhODNjMTY5ODE1MTllYTozOGYwZmZhMTdmNDg4ZDA4ZTI4MmE1MTlmMDRiMTcxMw==`\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { BoardModel } from '../models/board.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BoardsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getAllBoards(): Observable<any> {\n    return this.httpClient.get(`${environment.boardsApiUrl}/boards`, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    });\n  }\n\n  updateBoard(board: BoardModel): Observable<any> {\n    return this.httpClient.post<BoardModel>(`${environment.boardsApiUrl}/boards`, {board});\n  }\n}\n","import { Component, Input, OnInit } from '@angular/core';\nimport { BoardModel } from '../../models/board.model';\nimport { Observable, of } from 'rxjs';\n\n@Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.scss']\n})\nexport class BoardComponent implements OnInit {\n\n  @Input() board: BoardModel;\n  @Input() isTagShowed = false;\n  @Input() isImageAdding = false;\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  setTagsWidth(img: HTMLDivElement): Observable<{[klass: string]: string}> {\n    return of({width: `${img.clientWidth}px`});\n  }\n}\n","<ng-container *ngIf=\"board && board.photos.length !== 0\">\n  <div class=\"images\">\n    <div class=\"photo\" *ngFor=\"let image of board.photos\">\n      <img #img src=\"{{image.link}}\" alt=\"{{image.link}}\">\n      <div class=\"tags\" [ngStyle]=\"setTagsWidth(img) | async\">\n        <ng-container *ngIf=\"isTagShowed\">\n          <span *ngFor=\"let tag of image.tags\">{{tag.tag.en}}&nbsp;</span>\n        </ng-container>\n      </div>\n    </div>\n    <ng-container *ngIf=\"isImageAdding\">\n      <mat-spinner></mat-spinner>\n    </ng-container>\n  </div>\n</ng-container>\n<ng-container *ngIf=\"isImageAdding && board.photos.length === 0\">\n  <mat-spinner></mat-spinner>\n</ng-container>\n\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}